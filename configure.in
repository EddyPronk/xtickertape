dnl Process this file with autoconf to produce a configure script.
AC_INIT(tickertape.c)
AM_INIT_AUTOMAKE(xtickertape, 2.0rc1)

dnl Checks for programs.
AC_PROG_AWK
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PATH_PROG(TPC, tpc, false)
AC_PATH_PROG(MCGEN, mcgen, false)

dnl Checks for libraries.

# Iconv is just ugly
AM_ICONV

# Figure out where X11 lives.
AC_PATH_XTRA
if test "$no_x" = yes ; then
    AC_MSG_ERROR("Unable to find the X11 package")
    exit 1
fi

# Add the X11 stuff to the places it belongs
CPPFLAGS="$CPPFLAGS $X_CFLAGS"
LDFLAGS="$LDFLAGS $X_LIBS"
LIBS="$X_PRE_LIBS $X_EXTRA_LIBS $LIBS"

# Check to see if we can find the X library.
AC_CHECK_LIB(X11, XOpenDisplay)

# Check for the X toolkit library.
AC_CHECK_LIB(Xt, XtToolkitInitialize)

# Check for the X extensions library.
AC_CHECK_LIB(Xmu, _XEditResCheckMessages)

# Check for the X11 extensions library to see if we can make a shaped icon.
AC_CHECK_LIB(Xext, XShapeCombineMask)

# Check for the Xp (printing?!) library used by open motif.
AC_CHECK_LIB(Xp, XpCreateContext)

# See if we can track down Motif/LessTif
AC_ARG_WITH(motif, [  --with-motif=DIR        specify the LessTif/Motif installation directory])

# Check for silliness
if test "x$with_motif" = xno ; then
    AC_MSG_ERROR([xtickertape requires either LessTif or Motif])
    exit 1
fi

# Where are we supposed to find Motif/LessTif?
if test "x$with_motif" != xyes -a "x$with_motif" != x; then
    CPPFLAGS="$CPPFLAGS -I$with_motif/include"
    LDFLAGS="$LDFLAGS -L$with_motif/lib"
fi

# Check for the Motif library
AC_CHECK_LIB(Xm, XmCreatePulldownMenu, ok=yes, ok=no)
if test "$ok" = no; then
    echo "ERROR: \`libXm' is missing on your system.  You may obtain"
    echo "       a free Motif implementation from the Hungry Programmers"
    echo "       at http://www.lesstif.org/"
    exit 1
fi
LIBS="-lXm $LIBS"

AC_CHECK_HEADER(Xm/Xm.h, ok=yes, ok=no)
if test "$ok" = "no" ; then
    echo "ERROR: \`Xm.h' is missing on your system.  You may obtain"
    echo "       a free Motif implementation from the Hungry Programmers"
    echo "       at http://www.lesstif.org/"
    exit 1
fi

# See if the elvin libraries look healthy
AC_ARG_WITH(elvin, [  --with-elvin=DIR        specify the elvin4 installation directory])

# Check for silliness
if test "x$with_elvin" = xno ; then
    AC_MSG_ERROR([xtickertape cannot be compiled without elvin4])
    exit 1
fi

# Where are we supposed to look for elvin-config?
if test "$with_elvin" = yes -o -z "$with_elvin"; then
    elvin_config_path=$PATH
else
    elvin_config_path=$with_elvin/bin
fi

# Locate the elvin-config script
AC_PATH_PROG(ELVIN_CONFIG, elvin-config, not found, $elvin_config_path)
if test "$ELVIN_CONFIG" = "not found" ; then
    echo "WARNING: \`elvin-config' is missing on your system.  It"
    echo "         is normally installed as part of the elvin4 libraries,"
    echo "         which are available from http://elvin.dstc.edu.au/"
    exit 1
fi

# Update our flags to pick up the elvin includes and libraries
CFLAGS="$CFLAGS `$ELVIN_CONFIG --cflags vin4Xt`"
# FIX THIS: this should be LIBS="`$ELVIN_CONFIG --libs vin4Xt` $LIBS"
LIBS="$LIBS `$ELVIN_CONFIG --libs vin4Xt`"

# Make sure we link with the elvin libraries
AC_TRY_LINK_FUNC(elvin_xt_init, ok=yes, ok=no)
if test "$ok" = "no" ; then
    echo "WARNING: \`libvin4Xt' is missing on your system.  This is probably"
    echo "         due to the elvin4 libraries being compiled without xt"
    echo "         support.  See the elvin4's --with-xt configure option."
    exit 1
fi

dnl Checks for header files.
AC_CHECK_HEADERS([assert.h ctype.h errno.h fcntl.h getopt.h iconv.h netdb.h pwd.h stdio.h stdlib.h string.h strings.h signal.h stdarg.h sys/time.h sys/types.h sys/utsname.h time.h unistd.h])

dnl Check for the metamail program
AH_TEMPLATE(METAMAIL, [Define to the path to the metamail program])
AC_PATH_PROG(METAMAIL, metamail)
if test x"$METAMAIL" = x ; then
    echo "WARNING: \`metamail' is missing on your system. Without it,"
    echo "          xtickertape will be unable to decode MIME messages"
    echo "          Grab it from ftp://thumper.bellcore.com/pub/nsb/mm2.7.tar.Z"
else
    AC_DEFINE_UNQUOTED(METAMAIL, "$METAMAIL")
fi

dnl Checks for header files.
dnl ========================
AC_HEADER_STDC


dnl Checks for typedefs, structures, and compiler characteristics.
dnl ==============================================================
AC_C_CONST
AC_FUNC_FORK
dnl AC_FUNC_MALLOC
dnl AC_FUNC_STAT
AC_HEADER_SYS_WAIT
AC_STRUCT_TM
AC_TYPE_SIGNAL
AC_TYPE_SIZE_T

dnl Checks for library functions.
dnl =============================
# This is an ugly hack to force configure to check for gethostbyname()
# again.  If it wasn't found in the first attempt (in AC_PATH_XTRA)
# then the cache value will be set to no, even if it was then found in
# -lnsl.  By clearing the cache, we can force it to be checked again.
unset ac_cv_func_gethostbyname
AC_CHECK_FUNCS([dup2 gethostbyname getopt_long memset mkdir snprintf strcasecmp strchr strdup strerror strrchr uname XtVaOpenApplication])


dnl Checks for misc features
dnl ========================
AH_TEMPLATE(DEBUG, [Define if you want lots of debugging information])
AC_ARG_ENABLE(debug, [  --enable-debug          enable debugging print statements])
if test "$enable_debug" = yes ; then
    AC_DEFINE(DEBUG)
fi

AH_TEMPLATE(DEBUG_GLYPH, [Define if you want glyph-specific debugging information])
AC_ARG_ENABLE(debug-glyph, [  --enable-debug-glyph    enable glyph debugging code])
if test "$enable_debug_glyph" = yes ; then
    AC_DEFINE(DEBUG_GLYPH)
fi


AM_CONFIG_HEADER(config.h)
AC_OUTPUT([
    Makefile
    XTickertape.ad
    packages/Makefile
    packages/deb/Makefile
    packages/rpm/Makefile
    packages/rpm/SOURCES/Makefile
    packages/rpm/SPECS/Makefile
    packages/rpm/SPECS/xtickertape.spec])
