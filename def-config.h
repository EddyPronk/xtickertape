/***************************************************************

  Copyright (C) DSTC Pty Ltd (ACN 052 372 577) 1995.
  Unpublished work.  All Rights Reserved.

  The software contained on this media is the property of the
  DSTC Pty Ltd.  Use of this software is strictly in accordance
  with the license agreement in the accompanying LICENSE.DOC
  file.  If your distribution of this software does not contain
  a LICENSE.DOC file then you have no rights to use this
  software in any manner and should contact DSTC at the address
  below to determine an appropriate licensing arrangement.

     DSTC Pty Ltd
     Level 7, Gehrmann Labs
     University of Queensland
     St Lucia, 4072
     Australia
     Tel: +61 7 3365 4310
     Fax: +61 7 3365 4311
     Email: enquiries@dstc.edu.au

  This software is being provided "AS IS" without warranty of
  any kind.  In no event shall DSTC Pty Ltd be liable for
  damage of any kind arising out of or in connection with
  the use or performance of this software.

****************************************************************/

static char *default_config_file =
"# xtickertape.conf\n"
"\n"
"# This file contains a list of subscriptions for xtickertape.  Each\n"
"# subscription is described by a tag followed by a list of assignment\n"
"# statments in curly braces.  The tags are used to match up\n"
"# subscriptions when this file is reloaded into an already running\n"
"# xtickertape process to atomically swap subscriptions and, therefore, \n"
"# must be unique within this file.\n"
"#\n"
"# You may assign to any variable, but only the ones listed below will\n"
"# have any effect.  This first set are used to set up the subscription \n"
"# and send notifications.\n"
"#\n"
"# name		The subscription's  name.  This is what gets displayed\n"
"#		in the `Group' option menu and is also used as a\n"
"#		default for other variables.\n"
"#\n"
"# subscription	The elvin subscription expression for this\n"
"#		subscription.  Default is 'TICKERTAPE == \"[name]\"'\n"
"#\n"
"# in-menu	If non-nil, then this subscription will appear in the \n"
"#		`Group' option menu.  Defaults to nil.\n"
"#\n"
"# auto-mime	If non-nil, then any notifications received by this\n"
"#		subscription which have values for mime-type and\n"
"#		mime-args (see below) will automatically be displayed.\n"
"#		This also defaults to nil.\n"
"#\n"
"# producer-keys	This list of keys is attached to each outgoing\n"
"#		notification sent from this subscription.\n"
"#\n"
"# consumer-keys	This list of keys is attached to the subscription\n"
"#		expression.\n"
"#\n"
"#\n"
"# The following variables are used to construct the message that gets\n"
"# scrolled across the tickertape.  If a value is enclosed in square\n"
"# brackets, it will be evaluated in the context of the notification.\n"
"#\n"
"# group		This is used as the text of the first part scrolling\n"
"#		message.  It defaults to the value of `name' above.\n"
"#\n"
"# user		This is used as the text of the second part of the\n"
"#		scrolling message.  This defaults to the following\n"
"#		block: [USER || \"anonymous\"]\n"
"#		\n"
"#\n"
"# message	This is used as the text of the third and final part\n"
"#		of the scrolling message and defaults to the block:\n"
"#		[TICKERTEXT || \"no message\"]\n"
"#\n"
"# timeout	This should be a numeric value and is used to\n"
"#		determine how long (in minutes) the message should be\n"
"#		displayed in the scroller before it fades away.  It\n"
"#		defaults to the block: [TIMEOUT ? range(1, 60,\n"
"#		TIMEOUT) : 10]\n"
"#\n"
"# mime-type	If the notification contains a mime attachment then\n"
"#		this variable should indicate the type of the\n"
"#		attachment.  The default value of this variable is the \n"
"#		block: [MIME_TYPE]\n"
"#\n"
"# mime-args	If the notification contains a mime attachment then\n"
"#		this variable should contain an encoded attachment of\n"
"#		the type given in `mime-type' above.  The default\n"
"#		value is: [MIME_ARGS]\n"
"#\n"
"# message-id	To support threading, tickertape notifications have a\n"
"#		message-id field associated with them.  This variable\n"
"#		should contain the id of the received message and\n"
"#		defaults to: [Message-Id]\n"
"#\n"
"# reply-id	If the notification is a reply to another message,\n"
"#		then this variable should contain the message-id of\n"
"#		that message.  The default is: [In-Reply-To]\n"
"#\n"
"\n"
"# The ubiquitous `Chat' group\n"
"Chat:\n"
"{\n"
"    in-menu = 1;\n"
"};\n"
"\n"
"# The `Coffee' group uses all of the defaults\n"
"Coffee: {};\n"
"\n"
"# An authenticated channel that the xtickertape developers can use to\n"
"# broadcast useful information\n"
"Tickertape:\n"
"{\n"
"    consumer-keys = { \"4c798f2ae6a3f46f9360d3310556e22d6601fc01\" };\n"
"};\n"
"\n"
"# System messages about what was rebooted in the last hour\n"
"rwall:\n"
"{\n"
"    timeout = 60;\n"
"};\n"
"\n"
"# Your own group so that you can talk to yourself\n"
"%u@%d:\n"
"{\n"
"    in-menu = 1;\n"
"    timeout = 1;\n"
"};\n"
"\n"
"\n"
"#\n"
"# The following match notifications generated by `scoop', which\n"
"# transforms a usenet news into elvin notifications.\n"
"#\n"
"\n"
"# All articles posted by Linus Torvalds\n"
"linus:\n"
"{\n"
"    subscription = 'email == \"torvalds@transmeta.com\"';\n"
"    group = \"usenet\";\n"
"    user = [From || \"anonymous\"];\n"
"    message = [Subject || \"no message\"];\n"
"    timeout = 360;\n"
"    mime-type = \"x-elvin/news\";\n"
"    mime-args = [Message-Id];\n"
"};\n"
"\n"
"# All articles posted to any for-sale groups by people with australian \n"
"# e-mail addresses regarding SPARCs.\n"
"sparc:\n"
"{\n"
"    subscription = 'contains(Newsgroups, \"forsale\") &&\n"
"		    contains(to-lower(Subject), \"sparc\") &&\n"
"		    ends-with(email, \"au\")';\n"
"    group = \"usenet\";\n"
"    user = [From || \"anonymous\"];\n"
"    message = [Subject || \"no messsage\"];\n"
"    timeout = 60;\n"
"    mime-type = \"text/uri-list\";\n"
"    mime-args = [format(\"news://%S/<%S>\", X-NNTP-Host, Message-ID)];\n"
"};\n"
"\n"
"# All articles sent by people with DSTC e-mail addresses to non-dstc\n"
"# newsgroups (DSTC's usenet export).\n"
"export:\n"
"{\n"
"    subscription = 'begins-with(Newsgroups, \"dstc\") &&\n"
"		    ends-with(email, \"dstc.edu.au\")';\n"
"    group = \"usenet\";\n"
"    user = [From || \"anonymous\"];\n"
"    message = [Subject || \"no message\"];\n"
"    timeout = 60;\n"
"    mime-type = \"text/uri-list\";\n"
"    mime-args = [format(\"news://%S/<%S>\", X-NNTP-Host, Message-ID)];\n"
"};\n";
